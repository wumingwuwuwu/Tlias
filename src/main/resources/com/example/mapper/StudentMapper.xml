<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.StudentMapper">
    <!--分页查询-->
    <select id="list" resultType="com.example.pojo.Student">
        select s.id, s.name, s.no, s.gender, s.phone, s.id_card, s.is_college, s.address, s.degree, s.graduation_date, s.clazz_id, s.violation_count, s.violation_score, s.create_time, s.update_time, c.name clazzName
        from student as s left join clazz c on s.clazz_id = c.id
        <where>
            <if test="name != null and name != ''">
                s.name like concat('%', #{name}, '%')
            </if>
            <if test="degree != null">
                and s.degree = #{degree}
            </if>
            <if test="clazzId != null">
                and s.clazz_id = #{clazzId}
            </if>
        </where>
        order by s.update_time desc
    </select>

    <!--添加学生-->
    <insert id="insert">
        insert into student
            (name, no, gender, phone, id_card, is_college, address, degree, graduation_date, clazz_id, create_time, update_time)
        values
            (#{name}, #{no}, #{gender}, #{phone}, #{idCard}, #{isCollege}, #{address}, #{degree}, #{graduationDate}, #{clazzId}, #{createTime}, #{updateTime})
    </insert>

    <!--根据id查询学生-->
    <select id="getById" resultType="com.example.pojo.Student">
        select id, name, no, gender, phone, id_card, is_college, address, degree, graduation_date, clazz_id, violation_count, violation_score, create_time, update_time
        from student
        where id = #{id}
    </select>

    <!--根据id修改学生-->
    <update id="update">
        update student
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="no != null">
                no = #{no},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="idCard != null">
                id_card = #{idCard},
            </if>
            <if test="isCollege != null">
                is_college = #{isCollege},
            </if>
            <if test="address != null">
                address = #{address},
            </if>
            <if test="degree != null">
                degree = #{degree},
            </if>
            <if test="graduationDate != null">
                graduation_date = #{graduationDate},
            </if>
            <if test="clazzId != null">
                clazz_id = #{clazzId},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--根据id列表删除学生-->
    <delete id="deleteByIds">
        delete from student
            where id in
            <foreach item="id" collection="ids" separator="," open="(" close=")" index="">
                #{id}
            </foreach>
    </delete>

    <!--违纪处理-->
    <update id="violation">
        update student
        set violation_count = violation_count + 1,
            violation_score = violation_score + #{score}
        where id = #{id}
    </update>

</mapper>